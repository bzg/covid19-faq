["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$ajax.ring","~:imports",null,"~:requires",["^ ","~$ajax.interceptors","^;","~$ajax.protocols","^<","~$f","~$ajax.formats","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$-status","^<","~$map->ResponseFormat","^;","~$-get-all-headers","^<","~$-body","^<"],"~:defs",["^ ","~$make-ring-read",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/ajax/ring.cljc","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",21,"~:arglists",["~#list",["~$quote",["^N",[["~$body-read"]]]]]],"^7","~$ajax.ring/make-ring-read","^H","resources/public/js/dev/ajax/ring.cljc","^L",21,"~:method-params",["^N",[["^P"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^J",1,"~:variadic?",false,"^I",6,"~:ret-tag","~$function","^K",6,"~:max-fixed-arity",1,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P"]]]]]],"~$ring-response-format",["^ ","^F",null,"^G",["^ ","^H","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/ajax/ring.cljc","^I",12,"^J",7,"^K",12,"^L",27,"^M",["^N",["^O",["^N",[[],[["~#cmap",[["^ ","~:keys",["~$read","~$description","~$content-type"]],"~:format"]]]]]]],"~:doc","Returns a Ring-compatible response map.\n\n   Optionally can be passed a :format option. This should be another\n   response-format map. If format is provided it will be used to\n   specify the content-type, and the read method will be used to\n   populate the :body key in the response map.","~:top-fn",["^ ","^U",false,"~:fixed-arity",1,"^X",1,"^R",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^M",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^T",["^N",[null,null]]]],"^7","~$ajax.ring/ring-response-format","^H","resources/public/js/dev/ajax/ring.cljc","^L",27,"^16",["^ ","^U",false,"^17",1,"^X",1,"^R",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^M",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^T",["^N",[null,null]]],"^R",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^S",null,"^17",1,"^T",["^N",[null,null]],"^J",1,"^U",false,"~:methods",[["^ ","^17",0,"^U",false,"~:tag","~$any"],["^ ","^17",1,"^U",false,"^1:","~$ajax.interceptors/ResponseFormat"]],"^I",12,"^K",12,"^X",1,"^Y",true,"^M",["^N",[[],[["^[",[["^ ","^10",["^11","^12","^13"]],"^14"]]]]],"^15","Returns a Ring-compatible response map.\n\n   Optionally can be passed a :format option. This should be another\n   response-format map. If format is provided it will be used to\n   specify the content-type, and the read method will be used to\n   populate the :body key in the response map."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:description","^14","~:read","~:headers","~:status","~:content-type","~:body"]],"~:order",["^1D","^1C","^1F","^14","^1B","^1A","^1E"]],"^15",null]