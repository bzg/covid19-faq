["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$reitit.frontend.easy","~:imports",null,"~:requires",["^ ","~$rfh","~$reitit.frontend.history","^<","^<"],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$history",["^ ","^7","~$reitit.frontend.easy/history","~:file","resources/public/js/dev/reitit/frontend/easy.cljs","~:line",7,"~:column",1,"~:end-line",7,"~:end-column",17,"~:meta",["^ ","^B","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/reitit/frontend/easy.cljs","^C",7,"^D",10,"^E",7,"^F",17],"~:tag","~$cljs.core/Atom"],"~$start!",["^ ","~:protocol-inline",null,"^G",["^ ","^B","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/reitit/frontend/easy.cljs","^C",13,"^D",7,"^E",13,"^F",13,"~:arglists",["~#list",["~$quote",["^M",[["~$router","~$on-navigate","~$opts"]]]]],"~:doc","This registers event listeners on HTML5 history and hashchange events.\n\n  Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n  Figwheel or similar development workflow.\n\n  Parameters:\n  - router         The Reitit router.\n  - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n\n  Options:\n  - :use-fragment  (default true) If true, onhashchange and location hash are used to store the token."],"^7","~$reitit.frontend.easy/start!","^B","resources/public/js/dev/reitit/frontend/easy.cljs","^F",13,"~:method-params",["^M",[["^O","^P","^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^M",[null,null]],"^D",1,"~:variadic?",false,"^C",13,"~:ret-tag",["^6",[null,"~$any"]],"^E",13,"~:max-fixed-arity",3,"~:fn-var",true,"^L",["^M",["^N",["^M",[["^O","^P","^Q"]]]]],"^R","This registers event listeners on HTML5 history and hashchange events.\n\n  Automatically removes previous event listeners so it is safe to call this repeatedly, for example when using\n  Figwheel or similar development workflow.\n\n  Parameters:\n  - router         The Reitit router.\n  - on-navigate    Function to be called when route changes. Takes two parameters, ´match´ and ´history´ object.\n\n  Options:\n  - :use-fragment  (default true) If true, onhashchange and location hash are used to store the token."],"~$href",["^ ","^K",null,"^G",["^ ","^B","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/reitit/frontend/easy.cljs","^C",30,"^D",7,"^E",30,"^F",11,"^L",["^M",["^N",["^M",[["~$k"],["~$k","~$params"],["~$k","^11","~$query"]]]]],"~:top-fn",["^ ","^W",false,"~:fixed-arity",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]]],"^7","~$reitit.frontend.easy/href","^B","resources/public/js/dev/reitit/frontend/easy.cljs","^F",11,"^13",["^ ","^W",false,"^14",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]],"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^U",null,"^14",3,"^V",["^M",[null,null,null]],"^D",1,"^W",false,"~:methods",[["^ ","^14",1,"^W",false,"^H","^Y"],["^ ","^14",2,"^W",false,"^H","^Y"],["^ ","^14",3,"^W",false,"^H","^Y"]],"^C",30,"^E",30,"^Z",3,"^[",true,"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]]],"~$push-state",["^ ","^K",null,"^G",["^ ","^B","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/reitit/frontend/easy.cljs","^C",38,"^D",7,"^E",38,"^F",17,"^L",["^M",["^N",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]]]],"^R","Sets the new route, leaving previous route in history.","^13",["^ ","^W",false,"^14",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]]],"^7","~$reitit.frontend.easy/push-state","^B","resources/public/js/dev/reitit/frontend/easy.cljs","^F",17,"^13",["^ ","^W",false,"^14",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]],"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^U",null,"^14",3,"^V",["^M",[null,null,null]],"^D",1,"^W",false,"^16",[["^ ","^14",1,"^W",false,"^H","^Y"],["^ ","^14",2,"^W",false,"^H","^Y"],["^ ","^14",3,"^W",false,"^H","^Y"]],"^C",38,"^E",38,"^Z",3,"^[",true,"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^R","Sets the new route, leaving previous route in history."],"~$replace-state",["^ ","^K",null,"^G",["^ ","^B","/home/guerry/install/git/covid19/covid19-faq/resources/public/js/dev/reitit/frontend/easy.cljs","^C",47,"^D",7,"^E",47,"^F",20,"^L",["^M",["^N",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]]]],"^R","Replaces current route. I.e. current route is not left on history.","^13",["^ ","^W",false,"^14",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]]],"^7","~$reitit.frontend.easy/replace-state","^B","resources/public/js/dev/reitit/frontend/easy.cljs","^F",20,"^13",["^ ","^W",false,"^14",3,"^Z",3,"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^V",["^M",[null,null,null]]],"^T",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^U",null,"^14",3,"^V",["^M",[null,null,null]],"^D",1,"^W",false,"^16",[["^ ","^14",1,"^W",false,"^H","^Y"],["^ ","^14",2,"^W",false,"^H","^Y"],["^ ","^14",3,"^W",false,"^H","^Y"]],"^C",47,"^E",47,"^Z",3,"^[",true,"^L",["^M",[["~$k"],["~$k","^11"],["~$k","^11","^12"]]],"^R","Replaces current route. I.e. current route is not left on history."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"^R","Easy wrapper over reitit.frontend.history,\n  handling the state. Only one router can be active\n  at a time."]